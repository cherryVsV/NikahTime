openapi: 3.0.0
info:
  title: Nikah Time
  license:
    name: MIT
  version: 0.1.1
servers:
  - url: /api/
paths:
  /login:
    post:
      tags:
        - Login
      summary: Вход пользователя
      operationId: login
      requestBody:
        description: Данные для авторизации
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
            examples:
              Email:
                value:
                  grantType: email
                  email: test@gmail.com
                  password: ne6Jo$zi
                  notificationId: rgmkrigui7664ry74yfnvg495gikvm
              PhoneNumber:
                value:
                  grantType: phoneNumber
                  phoneNumber: +74951239999
                  password: LRn&z!4Y
                  notificationId: rgmkrigui7664ry74yfnvg495gikvm
              GoogleIdToken:
                value:
                  grantType: googleIdToken
                  idToken: eyJhbGciOiJSUzI1NiIsImtpZCI6IjFiZjhhODRkM2VjZDc3ZTlmMmFkNWYwNmZmZDI2MDcwMWRkMDZkOTAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiIzMjExNzk3NzU4MDctZWpmY2UzZDU5aWUwN2hnc2VnMzB2NWE3OGg4dGlrMTcuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJhdWQiOiIzMjExNzk3NzU4MDctaXYyaTVvZXEwZjRkanRlYmplNGZmbW5obXBmZmpzOWUuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJzdWIiOiIxMTEwNTk2ODk5NTc3MDgwNDg1MjMiLCJlbWFpbCI6ImRlaWdoZDA4QGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoi0JTQvNC40YLRgNC40Lkg0JfQsNC50YbQtdCyIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hL0FBVFhBSnhKcXNJaWVmYXdpZHFKQ3N1Sl9kSy1Pa2RZWTFPa3VybTFWNy1hPXM5Ni1jIiwiZ2l2ZW5fbmFtZSI6ItCU0LzQuNGC0YDQuNC5IiwiZmFtaWx5X25hbWUiOiLQl9Cw0LnRhtC10LIiLCJsb2NhbGUiOiJydSIsImlhdCI6MTYyNTY2Nzk5NCwiZXhwIjoxNjI1NjcxNTk0fQ.gbb5A30-Oqiu_o5bKrov4Sjm5I-7p0VCFxqMWaPfV-5wHBCVs3PR70pOxfLeyqqJHZkauE_KheKWxgOMo6CN4VhjPeOYWzmVH88fVB1ZWThfCkTD06rxWKsfY8I0__kNocP3K-iT5Az908lMtEfl9QQOJfCvgezxi-TKlBRP8R44s9s9bsMMvli08g_J2YEb5jZm6OH2W7KFTeoLzM3okcDEfnX5m--Qx52x6R9LqBPxD0AvzdenZwchQ3yNzpfLxG2tXpN8wehGijlJ-tG4vxSyC8IKy7x09k5whGWMTx_ssIDLQlnAjW91JibhKvgSZnWvyNmFnWey_D6gdSF8ig
                  notificationId: rgmkrigui7664ry74yfnvg495gikvm
              AppleIdToken:
                value:
                  grantType: appleIdToken
                  idToken: eyJraWQiOiJGUVVBN0RYUkJGIiwiYWxnIjoiRVMyNTYifQ.eyJpc3MiOiI3TUM2VVpSMlVWIiwiaWF0IjoxNTU5NjE0MjU2LCJleHAiOjE1NzUxNjYyNTYsImF1ZCI6Imh0dHBzOi8vYXBwbGVpZC5hcHBsZS5jb20iLCJzdWIiOiJsb2wuYXZvY2Fkby5jbGllbnQifQ.t6wIFrSKwuCZsJ9I1TWWBCdxmUMG3g0kNyNnxhkpG3oZAKY2UdXqL5CyRGTa21OYHa6ir1JFWkdBDjTNvt8hYC
                  notificationId: rgmkrigui7664ry74yfnvg495gikvm
        required: true
      responses:
        "200":
          description: Данные аккаунта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /registration:
    post:
      tags:
        - Registration
      summary: Регистрация пользователя
      operationId: registration
      requestBody:
        description: Данные для авторизации
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
            examples:
              Email:
                value:
                  grantType: email
                  email: test@gmail.com
                  password: ne6Jo$zi
              PhoneNumber:
                value:
                  grantType: phoneNumber
                  phoneNumber: +74951239999
                  password: LRn&z!4Y
              GoogleIdToken:
                value:
                  grantType: googleIdToken
                  idToken: eyJhbGciOiJSUzI1NiIsImtpZCI6IjFiZjhhODRkM2VjZDc3ZTlmMmFkNWYwNmZmZDI2MDcwMWRkMDZkOTAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiIzMjExNzk3NzU4MDctZWpmY2UzZDU5aWUwN2hnc2VnMzB2NWE3OGg4dGlrMTcuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJhdWQiOiIzMjExNzk3NzU4MDctaXYyaTVvZXEwZjRkanRlYmplNGZmbW5obXBmZmpzOWUuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJzdWIiOiIxMTEwNTk2ODk5NTc3MDgwNDg1MjMiLCJlbWFpbCI6ImRlaWdoZDA4QGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoi0JTQvNC40YLRgNC40Lkg0JfQsNC50YbQtdCyIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hL0FBVFhBSnhKcXNJaWVmYXdpZHFKQ3N1Sl9kSy1Pa2RZWTFPa3VybTFWNy1hPXM5Ni1jIiwiZ2l2ZW5fbmFtZSI6ItCU0LzQuNGC0YDQuNC5IiwiZmFtaWx5X25hbWUiOiLQl9Cw0LnRhtC10LIiLCJsb2NhbGUiOiJydSIsImlhdCI6MTYyNTY2Nzk5NCwiZXhwIjoxNjI1NjcxNTk0fQ.gbb5A30-Oqiu_o5bKrov4Sjm5I-7p0VCFxqMWaPfV-5wHBCVs3PR70pOxfLeyqqJHZkauE_KheKWxgOMo6CN4VhjPeOYWzmVH88fVB1ZWThfCkTD06rxWKsfY8I0__kNocP3K-iT5Az908lMtEfl9QQOJfCvgezxi-TKlBRP8R44s9s9bsMMvli08g_J2YEb5jZm6OH2W7KFTeoLzM3okcDEfnX5m--Qx52x6R9LqBPxD0AvzdenZwchQ3yNzpfLxG2tXpN8wehGijlJ-tG4vxSyC8IKy7x09k5whGWMTx_ssIDLQlnAjW91JibhKvgSZnWvyNmFnWey_D6gdSF8ig
              AppleIdToken:
                value:
                  grantType: appleIdToken
                  idToken: eyJraWQiOiJGUVVBN0RYUkJGIiwiYWxnIjoiRVMyNTYifQ.eyJpc3MiOiI3TUM2VVpSMlVWIiwiaWF0IjoxNTU5NjE0MjU2LCJleHAiOjE1NzUxNjYyNTYsImF1ZCI6Imh0dHBzOi8vYXBwbGVpZC5hcHBsZS5jb20iLCJzdWIiOiJsb2wuYXZvY2Fkby5jbGllbnQifQ.t6wIFrSKwuCZsJ9I1TWWBCdxmUMG3g0kNyNnxhkpG3oZAKY2UdXqL5CyRGTa21OYHa6ir1JFWkdBDjTNvt8hYC
        required: true
      responses:
        "204":
          description: OK
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /registration/code:
    post:
      tags:
        - Registration
      summary: Запрос повторной отправки пользователю кода подтверждения
      operationId: requestRegistrationCode
      requestBody:
        description: Почта или номер телефона пользователя
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordCodeRequest'
            examples:
              Email:
                value:
                  grantType: email
                  email: test@gmail.com
              PhoneNumber:
                value:
                  grantType: phoneNumber
                  phoneNumber: +74951239999
        required: true
      responses:
        "202":
          description: OK
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /registration/code/verify:
    post:
      tags:
        - Registration
      summary: Отправка кода подтверждения
      operationId: verifyRegistrationCode
      requestBody:
        description: Код подтверждения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeRequest'
            examples:
              Email:
                value:
                  grantType: email
                  email: test@gmail.com
                  code: "123765"
              PhoneNumber:
                value:
                  grantType: phoneNumber
                  phoneNumber: +74951239999
                  code: "123765"
        required: true
      responses:
        "200":
          description: Данные аккаунта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenData'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /account/password/code:
    post:
      tags:
        - Account
      summary: Запрос кода подтверждения
      operationId: getResetPasswordCode
      requestBody:
        description: Почта или номер телефона пользователя
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordCodeRequest'
            examples:
              Email:
                value:
                  grantType: email
                  email: test@gmail.com
              PhoneNumber:
                value:
                  grantType: phoneNumber
                  phoneNumber: +74951239999
        required: true
      responses:
        "200":
          description: OK
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /account/password/code/verify:
    post:
      tags:
        - Account
      summary: Отправка кода подтверждения
      operationId: verifyResetPasswordCode
      requestBody:
        description: Код подтверждения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeRequest'
            examples:
              Email:
                value:
                  grantType: email
                  email: test@gmail.com
                  code: 12345121Yahct3
              PhoneNumber:
                value:
                  grantType: phoneNumber
                  phoneNumber: +74951239999
                  code: 12345121Yahct3
        required: true
      responses:
        "204":
          description: OK
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /account/password/reset:
    post:
      tags:
        - Account
      summary: Сброс пароля пользователя
      operationId: resetPassword
      requestBody:
        description: Данные для сброса пароля
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
            examples:
              Email:
                value:
                  grantType: email
                  email: test@gmail.com
                  password: bc7$etyZ
                  code: 12345121Yahct3
              PhoneNumber:
                value:
                  grantType: phoneNumber
                  phoneNumber: +74951239999
                  password: bc7$etyZ
                  code: 12345121Yahct3
        required: true
      responses:
        "200":
          description: Данные аккаунта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /account/user/update:
    put:
      tags:
        - Account
      summary: Обновление информации о пользователе
      operationId: updateUser
      requestBody:
        description: Информация о пользователе
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /account/user:
    get:
      tags:
        - Account
      summary: Получение информации о пользователе
      operationId: getUser
      responses:
        "200":
          description: Информация о пользователе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /account/user/{userId}:
    get:
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Айдишник пользователя, профиль которого получаем
      tags:
        - Account
      summary: Получение профиля пользователя по айди
      operationId: getUserById
      responses:
        "200":
          description: Информация о пользователе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /chats/user:
    get:
      tags:
        - Chats
      summary: Получение информации о чатах пользователя
      operationId: getChatUser
      responses:
        "200":
          description: Информация о чатах пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chats'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /chats/add/{userId}:
    post:
      tags:
        - Chats
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Айдишник пользователя, с которым авторизованный пользователь начинает чат
      summary: Создание нового чата
      operationId: addUserChat
      responses:
        "200":
          description: Чат создан успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserChat'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /chats/get/{chatId}:
    get:
      tags:
        - Chats
      parameters:
        - in: path
          name: chatId
          schema:
            type: integer
          required: true
          description: Айдишник чата, сообщения которого нужно получить
      summary: Получение информации о чате между пользователями
      operationId: getChatMessages
      responses:
        "200":
          description: Информация о чате между пользователями
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /chats/block/{chatId}:
    put:
      tags:
        - Chats
      parameters:
        - in: path
          name: chatId
          schema:
            type: integer
          required: true
          description: Айдишник чата, который нужно заблокировать/разблокировать
      summary: Заблокировать/разблокировать чат между пользователями
      operationId: blockChat
      responses:
        "200":
          description: Чат заблокирован/разблокирован успешно. Обновляем данные чата пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /chats/send/message:
    post:
      tags:
        - Chats
      summary: Отправка сообщения
      operationId: sendMessage
      requestBody:
        description: Данные о сообщении
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessage'
            examples:
              default:
                value:
                  message: Hello
                  chatId: 1
                  messageType: text
        required: true
      responses:
        "200":
          description: Сообщение отправлено успешно. После этого будет вызываться событие об уведомлении пользователя, которому отправлено сообщение
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /chats/delete/{chatId}:
    delete:
      tags:
        - Chats
      parameters:
        - in: path
          name: chatId
          schema:
            type: integer
          required: true
          description: Айдишник чата, который нужно удалить
      summary: Удалить чат между пользователями
      operationId: deleteChat
      responses:
        "200":
          description: Чат удален успешно. Обновляем данные о чатах пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chats'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /chats/get/message/{messageId}:
    get:
      tags:
        - Chats
      parameters:
        - in: path
          name: messageId
          schema:
            type: integer
          required: true
          description: Айдишник сообщения, данные которого нужно получить
      summary: Получение информации о сообщении пользователя
      operationId: getMessage
      responses:
        "200":
          description: Информация о сообщении между пользователями
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /chats/seen/message/{messageId}:
    put:
      tags:
        - Chats
      parameters:
        - in: path
          name: messageId
          schema:
            type: integer
          required: true
          description: Айдишник сообщения, которое было прочитано
      summary: Отметка сообщения прочитанным
      operationId: makeSeenMessage
      responses:
        "200":
          description: Сообщение отмечено прочитанным
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: [ ]
  /favourites/get:
    get:
      tags:
        - Favourites
      summary: Получение информации о понравившихся пользователю людях
      operationId: getUserFavourites
      responses:
        "200":
          description: Информация о понравившихся пользователю людях
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favourite'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /favourites/add/{userId}:
    put:
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Айдишник пользователя, которого добавить в понравившиеся
      tags:
        - Favourites
      summary: Добавление пользователя в понравившееся
      operationId: addToUserFavourites
      responses:
        "200":
          description: Добавление пользователя в понравившееся прошло успешно. Совпадения не было
        "202":
          description: Добавление пользователя в понравившееся прошло успешно. Лайки взаимные - возвращаем пользователя, с которым совпали лайки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavouriteMatch'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /favourites/delete/{userId}:
    delete:
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Айдишник пользователя, которого удалить из понравившихся
      tags:
        - Favourites
      summary: Удаление пользователя из понравившихся
      operationId: deleteFromUserFavourites
      responses:
        "200":
          description: Удаление пользователя из понравившихся успешно. Обновляем данные о понравившихся
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favourite'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /search/users:
    post:
      tags:
        - Search
      summary: Поиск пользователей по фильтрам из подбора кандидатур по интересам (из всех сохраненных просмотренных)
      operationId: searchUsers
      requestBody:
        description: Подбор пользователю кандидатур в соответствии с выбранными фильтрами
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
            examples:
              simplifiedFilter:
                value:
                  filterType: simpleFilter
                  minAge: 18
                  maxAge: 30
                  isOnline: true
              complicatedFilter:
                value:
                  filterType: complicatedFilter
                  minAge: 18
                  maxAge: 30
                  country: Россия
                  city: Ростов
                  education: basicGeneral
                  maritalStatus: notMarried
                  haveChildren: true
                  haveBadHabits: false
                  badHabits: ["smoking"]
                  isOnline: true
        required: true
      responses:
        "200":
          description: Кандидатуры пользователей в соответствии с выбранными фильтрами
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favourite'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /search/save/seen/users:
    post:
      tags:
        - Search
      summary: Сохранение кандидатур, которые были просмотрены пользователем
      operationId: saveSeenUsers
      requestBody:
        description: Сохранение кандидатур, которые были просмотрены пользователем
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeenUsers'
        required: true
      responses:
        "200":
          description: Сохранены кандидатуры, которые были просмотрены пользователем
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /search/get/selection/users:
    get:
      tags:
        - Search
      summary: Получение кандидатур, которые подобрал сервер в соответствии с интересами пользователя (максимум - 20). Для показа следующих 20 кандидатур, вызываем этот же запрос, здесь будет проверка, были ли уже показаны данные анкеты
      operationId: getSelectionUsers
      responses:
        "200":
          description: Кандидатуры, подобранные пользователю по интересам
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favourite'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /guests/get:
    get:
      tags:
        - Guests
      summary: Получение информации о гостях пользователя
      operationId: getGuestsUser
      responses:
        "200":
          description: Информация о гостях пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guests'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /guests/add/{userId}:
    put:
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Айдишник пользователя, описание профиля которого просмотрел авторизованный пользователь
      tags:
        - Guests
      summary: Добавление гостей, просмотревших описание профиля пользователя
      operationId: addUserGuest
      responses:
        "200":
          description: Добавление гостя, просмотревшего описание профиля пользователя, прошло успешно
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /store/file:
    post:
      tags:
        - Files
      summary: Загрузка файлов на сервер
      operationId: storeFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/File'
      responses:
        "200":
          description: Загрузка файла прошла успешно
          content:
            application/json:
              schema:
                properties:
                  fileUrl:
                    type: string
                    description: 'Ссылка на файл на сервере'
                  fileType:
                    type: string
                    enum:
                      - image
                      - file
                      - video
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /get/file/size:
    post:
      tags:
        - Files
      summary: Получение размера загруженного файла
      operationId: getFileSize
      requestBody:
        description: Отправка ссылки на файл
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileURL'
        required: true
      responses:
        "200":
          description: Возвращаем размер файла в Мб
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileSize:
                    type: string
              example:
                fileSize: "48Mb"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /account/logout/{token}:
    get:
      parameters:
        - in: path
          name: token
          schema:
            type: string
          required: true
          example: rgmkrigui7664ry74yfnvg495gikvm09876543
          description: Токен устройства, с которого произошел выход
      tags:
        - Account
      summary: Выход пользователя из аккаунта
      operationId: logout
      responses:
        "200":
          description: Выход прошел успешно
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /set/user/tariff/{tariffId}:
    put:
      parameters:
        - in: path
          name: tariffId
          schema:
            type: integer
          required: true
          description: Айдишник тарифа, которй оплатил пользователь
      tags:
        - Tariffs
      summary: Сохранение тарифа, оплаченного пользователем
      operationId: setUserTariff
      responses:
        "200":
          description: Сохранение тарифа, оплаченного пользователем, прошло успешно
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /get/tariffs:
    get:
      tags:
        - Tariffs
      summary: Получение всех тарифов
      operationId: getTariffs
      responses:
        "200":
          description: Возвращаем тарифы из базы данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tariffs'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /get/user/tariff:
    get:
      tags:
        - Tariffs
      summary: Получение тарифа пользователя
      operationId: getUserTariff
      responses:
        "200":
          description: Возвращаем тариф пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tariff'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /auth/apple/callback:
    post:
      tags:
        - Socials
      summary: Получение данных после авторизации через соц.сеть
      operationId: callback
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                code:
                  type: string
              example:
                code: "12345"
      responses:
        "200":
          description: Данные аккаунта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /complain:
    post:
      tags:
        - Complains
      summary: Отправка жалобы
      operationId: makeComplain
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  format: int64
                  description: Айдишник пользователя, на которого подается жалоба
                title:
                  type: string
                  description: название жалобы
                message:
                  type: string
                  description: комментарий к жалобе
              example:
                userId: 88
                title: "Пропаганда вражды и разжигание ненависти"
                message:  "Пропаганда вражды и разжигание ненависти"
      responses:
        "200":
          description: Жалоба подана успешно
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

components:
  schemas:
    Auth:
      required:
        - grantType
      type: object
      properties:
        grantType:
          type: string
          description: Тип авторизационных данных
          enum:
            - email
            - phoneNumber
            - googleIdToken
            - appleIdToken
        idToken:
          type: string
          description: Идентификационный токен от провайдера
        phoneNumber:
          type: string
          description: Номер телефона пользователя
        email:
          type: string
          description: Email пользователя
        password:
          type: string
          description: Пароль пользователя
        notificationId:
          type: string
          description: Код устройства, на которое слать push-уведомления
    UserChat:
      type: object
      properties:
        chatId:
          type: integer
          format: int64
          description: id созданного чата
        userAvatar:
          type: string
          description: Аватар пользователя, с которым создан чат
        userName:
          type: string
          description: Имя пользователя, с которым создан чат
        isOnline:
          type: boolean
    Filter:
      required:
        - filterType
        - minAge
        - maxAge
        - isOnline
      type: object
      properties:
        filterType:
          type: string
          description: Тип фильтра
          enum:
            - simplifiedFilter
            - complicatedFilter
        minAge:
          type: integer
          format: int32
        maxAge:
          type: integer
          format: int32
        isOnline:
          type: boolean
        country:
          type: string
        city:
          type: string
        education:
          type: string
          description: "Уровень образования. Может принимать следущие значения: ос\
                  новное общее / basic general, среднее общее / secondary general, средн\
                  ее профессиональное / secondary vocational, высшее (бакалавр, специали\
                  ст) / higher (bachelor, specialist), высшее (магистр) / higher (мaster),\
                  \ учёная степень / academic degree"
          enum:
            - basicGeneral
            - secondaryGeneral
            - secondaryVocational
            - higherBachelorOrSpecialist
            - higherMaster
            - academicDegree
        maritalStatus:
          type: string
          enum:
            - notMarried
            - married
            - divorced
        haveСhildren:
          type: boolean
        badHabits:
          type: array
          items:
            $ref: '#/components/schemas/BadHabit'
        haveBadHabits:
          type: boolean
          description: Обязательный параметр для расширенного фильтра. В случае выбора привычек - передать true
    File:
      required:
        - fileType
        - file
      type: object
      properties:
        fileType:
          type: string
          enum:
            - image
            - file
            - video
        file:
          type: string
          format: binary
          description: "Доступные расширения картинок - jpg,png,jpeg,bmp. На файлы нет ограничений. На видео - не более 100мб"
    FileURL:
      required:
        - fileURL
      type: object
      properties:
        fileURL:
          type: string
          format: uri
    SeenUsers:
      type: array
      items:
        $ref: "#/components/schemas/SeenUser"
      example:
        - userId: 1
          isProfileParametersMatched: true
        - userId: 2
          isProfileParametersMatched: false
    SeenUser:
      type: object
      properties:
        userId:
          type: integer
          format: int64
          description: "Айдишники просмотренных пользователем анкет"
        isProfileParametersMatched:
          type: boolean
    Account:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        tokenData:
          $ref: '#/components/schemas/TokenData'
    Chats:
      type: array
      items:
        $ref: '#/components/schemas/Chat'
      example:
        - chatId: 1
          userAvatar: url
          userName: name
          isChatBlocked: false
          isAuthUserBlockChat: false
          lastMessage: message
          lastMessageTime: 15-10-21 19:00:00
          isAuthUserMessage: true
          isSeenMessage: true
          numberNotSeenMessages: 0
          lastMessageType: text
        - chatId: 2
          userAvatar: url
          userName: name
          isChatBlocked: false
          isAuthUserBlockChat: false
          lastMessage: message
          lastMessageTime: 15-10-21 19:00
          isAuthUserMessage: true
          isSeenMessage: false
          numberNotSeenMessages: 4
          lastMessageType: image
    Favourite:
      type: array
      items:
        $ref: '#/components/schemas/FavouriteUser'
    Guests:
      type: array
      items:
        $ref: '#/components/schemas/GuestUser'
    Messages:
      type: object
      properties:
        chat:
          $ref: '#/components/schemas/CurrentChat'
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          example:
            - message: message1
              messageTime: 15-10-21 19:00:00
              isAuthUserMessage: true
              messageId: 1
              isMessageSeen: true
            - message: message2
              messageTime: 15-10-21 19:01:00
              isAuthUserMessage: false
              messageId: 2
              isMessageSeen: true
    TokenData:
      required:
        - accessToken
        - expiresIn
        - refreshToken
      type: object
      properties:
        accessToken:
          type: string
        expiresIn:
          type: integer
          format: int64
        refreshToken:
          type: string
    User:
      required:
        - userId
        - badHabits
        - birthDate
        - city
        - contactPhoneNumber
        - country
        - education
        - firstName
        - gender
        - haveСhildren
        - interests
        - lastName
        - maritalStatus
        - isOnline
      type: object
      properties:
        userId:
          type: integer
          format: int64
          description: "для прослушивания события отправки сообщения в чате,
                в названии события необходимо будет указывать id авторизованного пользователя"
        firstName:
          type: string
        lastName:
          type: string
        photos:
          type: array
          description: Массив ссылок на фотограйии пользователя. Первая ссылка - основное
            фото пользователя.
          items:
            type: string
            format: uri
        gender:
          type: string
          enum:
            - male
            - female
        birthDate:
          type: string
          format: data-time
          default: 24-09-2021
        country:
          type: string
        city:
          type: string
        contactPhoneNumber:
          type: string
        education:
          type: string
          description: "Уровень образования. Может принимать следущие значения: ос\
            новное общее / basic general, среднее общее / secondary general, средн\
            ее профессиональное / secondary vocational, высшее (бакалавр, специали\
            ст) / higher (bachelor, specialist), высшее (магистр) / higher (мaster),\
            \ учёная степень / academic degree"
          enum:
            - basicGeneral
            - secondaryGeneral
            - secondaryVocational
            - higherBachelorOrSpecialist
            - higherMaster
            - academicDegree
        placeOfStudy:
          type: string
        placeOfWork:
          type: string
        workPosition:
          type: string
        maritalStatus:
          type: string
          enum:
            - notMarried
            - married
            - divorced
        haveСhildren:
          type: boolean
        badHabits:
          type: array
          items:
            $ref: '#/components/schemas/BadHabit'
        interests:
          type: array
          items:
            type: string
        about:
          type: string
        isOnline:
          type: boolean
    FavouriteUser:
      required:
        - userId
        - badHabits
        - birthDate
        - city
        - country
        - education
        - firstName
        - haveСhildren
        - interests
        - lastName
        - maritalStatus
        - isOnline
      type: object
      properties:
        userId:
          type: integer
          format: int64
          description: "Нужен для добавления данного пользователя в понравившиеся и для начала чата с данным пользователем"
        firstName:
          type: string
        lastName:
          type: string
        photos:
          type: array
          description: Массив ссылок на фотограйии пользователя. Первая ссылка - основное
            фото пользователя.
          items:
            type: string
            format: uri
        birthDate:
          type: string
          format: data-time
          default: 24-09-2021
        city:
          type: string
        education:
          type: string
          description: "Уровень образования. Может принимать следущие значения: ос\
              новное общее / basic general, среднее общее / secondary general, средн\
              ее профессиональное / secondary vocational, высшее (бакалавр, специали\
              ст) / higher (bachelor, specialist), высшее (магистр) / higher (мaster),\
              \ учёная степень / academic degree"
          enum:
            - basicGeneral
            - secondaryGeneral
            - secondaryVocational
            - higherBachelorOrSpecialist
            - higherMaster
            - academicDegree
        placeOfStudy:
          type: string
        placeOfWork:
          type: string
        workPosition:
          type: string
        maritalStatus:
          type: string
          enum:
            - notMarried
            - married
            - divorced
        haveСhildren:
          type: boolean
        badHabits:
          type: array
          items:
            $ref: '#/components/schemas/BadHabit'
        interests:
          type: array
          items:
            type: string
        about:
          type: string
        isOnline:
          type: boolean
    GuestUser:
      required:
        - userId
        - badHabits
        - birthDate
        - city
        - contactPhoneNumber
        - country
        - education
        - firstName
        - haveСhildren
        - interests
        - lastName
        - maritalStatus
        - date
        - isOnline
        - isProfileParametersMatched
      type: object
      properties:
        userId:
          type: integer
          format: int64
          description: "Нужен для добавления данного пользователя в понравившиеся"
        firstName:
          type: string
        lastName:
          type: string
        photos:
          type: array
          description: Массив ссылок на фотограйии пользователя. Первая ссылка - основное
            фото пользователя.
          items:
            type: string
            format: uri
        birthDate:
          type: string
          format: data-time
          default: 24-09-2021
        city:
          type: string
        education:
          type: string
          description: "Уровень образования. Может принимать следущие значения: ос\
                  новное общее / basic general, среднее общее / secondary general, средн\
                  ее профессиональное / secondary vocational, высшее (бакалавр, специали\
                  ст) / higher (bachelor, specialist), высшее (магистр) / higher (мaster),\
                  \ учёная степень / academic degree"
          enum:
            - basicGeneral
            - secondaryGeneral
            - secondaryVocational
            - higherBachelorOrSpecialist
            - higherMaster
            - academicDegree
        placeOfStudy:
          type: string
        placeOfWork:
          type: string
        workPosition:
          type: string
        maritalStatus:
          type: string
          enum:
            - notMarried
            - married
            - divorced
        haveСhildren:
          type: boolean
        badHabits:
          type: array
          items:
            $ref: '#/components/schemas/BadHabit'
        interests:
          type: array
          items:
            type: string
        about:
          type: string
        date:
          type: string
          description: "Дата просмотра профиля пользователя гостем"
          format: data-time
          default: 24-09-2021
        isOnline:
          type: boolean
        isProfileParametersMatched:
          type: boolean
    CodeRequest:
      required:
        - code
        - grantType
      type: object
      properties:
        grantType:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        code:
          type: string
    ResetPasswordRequest:
      required:
        - code
        - grantType
        - password
      type: object
      properties:
        grantType:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        password:
          type: string
        code:
          type: string
    ResetPasswordCodeRequest:
      required:
        - grantType
      type: object
      properties:
        grantType:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
    BadHabit:
      type: string
      enum:
        - smoking
        - alcohol
        - gambling
        - other
    Error:
      required:
        - code
        - detail
        - title
      type: object
      properties:
        code:
          type: integer
          format: int32
        title:
          type: string
        detail:
          type: string
    Chat:
      required:
        - chatId
        - userId
        - userAvatar
        - userName
        - isChatBlocked
        - lastMessage
        - lastMessageTime
        - lastMessageType
        - isAuthUserMessage
        - isSeenMessage
        - numberNotSeenMessages
        - isOnline
      type: object
      properties:
        chatId:
          type: integer
          format: int64
          description: "Для подгрузки сообщений в чате для запроса используется в качестве параметра
           и для прослушивания события отправки сообщения в данном чате,
            в названии события необходимо будет указывать id чата"
        userId:
          type: integer
          format: int64
        userAvatar:
          type: string
          format: uri
        userName:
          type: string
        isOnline:
          type: boolean
        isChatBlocked:
          type: boolean
        isAuthUserBlockChat:
          type: boolean
        lastMessage:
          type: string
        lastMessageTime:
          type: string
          format: data-time
        lastMessageType:
          type: string
          description: Тип сообщения, например, картинка, текст и т.д
          enum:
            - text
            - image
        isAuthUserMessage:
          type: boolean
        isSeenMessage:
          type: boolean
        numberNotSeenMessages:
          type: integer
          format: int32
    CurrentChat:
      required:
        - chatId
        - userAvatar
        - userName
        - isChatBlocked
        - isOnline
      type: object
      properties:
        chatId:
          type: integer
          format: int64
          description: "Для подгрузки сообщений в чате для запроса используется в качестве параметра"
        userAvatar:
          type: string
          format: uri
        userName:
          type: string
        isOnline:
          type: boolean
        isChatBlocked:
          type: boolean
    FavouriteMatch:
      required:
        - favouriteId
        - userAvatar
        - userName
        - isOnline
      type: object
      properties:
        isOnline:
          type: boolean
        favouriteId:
          type: integer
          format: int64
        userAvatar:
          type: string
          format: uri
        userName:
          type: string
    Message:
      required:
        - message
        - messageTime
        - isAuthUserMessage
        - messageId
        - isMessageSeen
        - messageType
      type: object
      properties:
        message:
          type: string
        messageTime:
          type: string
          format: data-time
        isAuthUserMessage:
          type: boolean
        messageId:
          type: integer
          format: int64
        isMessageSeen:
          type: boolean
        messageType:
          type: string
          description: Тип сообщения, например, картинка, текст и т.д
          enum:
            - text
            - image
    SendMessage:
      required:
        - message
        - chatId
      type: object
      properties:
        message:
          type: string
        chatId:
          type: integer
          format: int64
          description: "Чат создается между двумя пользователями, по его айдишнику будет поиск пользователя, которому отправлено сообщение"
        messageType:
          type: string
          description: Тип сообщения, например, картинка, текст и т.д
          enum:
            - text
            - image
    Tariffs:
      type: array
      items:
        $ref: '#/components/schemas/Tariff'
    Tariff:
      required:
        - tariffId
        - tariffTitle
        - tariffPrice
      type: object
      properties:
        tariffId:
          type: integer
          format: int64
        tariffTitle:
          type: string
        tariffPrice:
          type: integer
          format: int64
        tariffDescription:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
